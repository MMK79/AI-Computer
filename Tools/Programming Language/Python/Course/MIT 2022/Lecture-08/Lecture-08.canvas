{
	"nodes":[
		{"id":"ce4ee78b5d83cda0","type":"group","x":-215,"y":-383,"width":1123,"height":240,"label":"Casual way to see the note"},
		{"id":"e77a26b37dbddb44","type":"group","x":1207,"y":305,"width":1593,"height":126,"label":"What happen when you call/invoke/run function"},
		{"id":"28939c6decd05d07","type":"text","text":"Function Support Modularity:\nBreak Complexity","x":230,"y":335,"width":280,"height":65},
		{"id":"49d9c7390c0175ee","type":"text","text":"if there is no return in a function, it will return None (None is a value of Nonetype)\n* Represent absence of a value\n\t* If invoke in shell it will print None\n* No static semantic error generate","x":162,"y":-62,"width":368,"height":175},
		{"id":"b84e81b22d836cce","type":"text","text":"Return vs. Print","x":590,"y":-4,"width":250,"height":60},
		{"id":"917190673342ddec","type":"text","text":"Return:\n* only have meaning in function\n* Each function only have One return\n* Code after return will not get execute\n* Value associated to it $\\rightarrow$ given to function caller","x":960,"y":-185,"width":426,"height":179},
		{"id":"c1a178593b2d77d8","type":"text","text":"Print:\n* It is a function itself, can be used outside a function\n* Code after print will execute\n* You can have as many print as you want inside a function\n* Value associated to it $\\rightarrow$ outputted to console\n* Print Expression = None","x":960,"y":56,"width":493,"height":211},
		{"id":"646bbc2002b55980","type":"text","text":"Function = Object","x":580,"y":338,"width":250,"height":60},
		{"id":"f74a08d5885eb940","type":"text","text":"Function Scope","x":923,"y":338,"width":250,"height":60},
		{"id":"c8ea270b2008c9c8","type":"text","text":"Function Call","x":1227,"y":338,"width":250,"height":60},
		{"id":"cd682fac34627929","type":"text","text":"Main program pause","x":1530,"y":338,"width":250,"height":60},
		{"id":"5791468ede624e62","type":"text","text":"Create an Environment","x":1850,"y":338,"width":250,"height":60},
		{"id":"afef9f55d56f81d8","type":"text","text":"Mini program:\nAssign parameters, run the body of the function, return the value","x":2150,"y":325,"width":320,"height":86},
		{"id":"603ac099a167a0f2","type":"text","text":"Environment Disappear after the value return","x":2530,"y":338,"width":250,"height":60},
		{"id":"79045bce6d1c7b0e","type":"text","text":"Lecture-08","x":-576,"y":-4,"width":250,"height":60},
		{"id":"85c32828a6a8f67d","type":"text","text":"Function as Object","x":-245,"y":-4,"width":250,"height":60},
		{"id":"dc2534cd60d39e96","type":"text","text":"Absence of Value","x":248,"y":-232,"width":178,"height":60},
		{"id":"7544f323c4d856d3","type":"text","text":"Return None","x":265,"y":-363,"width":143,"height":60},
		{"id":"7ac578b3c83dc61c","type":"text","text":"No static semantic error generate","x":535,"y":-232,"width":310,"height":60},
		{"id":"8059f57f9529f216","type":"text","text":"If you print result to None","x":-135,"y":-232,"width":282,"height":60},
		{"id":"9ba1c7deb8f6e8da","type":"text","text":"No return in a function","x":-103,"y":-363,"width":250,"height":60},
		{"id":"9a76c653cd7bbaf8","x":1798,"y":510,"width":410,"height":123,"type":"text","text":"* Every time you make a function call you make a new environment\n* When function call environment disappear all the variable in it disappear too"},
		{"id":"f86f7103c61ab46b","x":923,"y":760,"width":250,"height":60,"type":"text","text":"Environments"},
		{"id":"847b3611f8b69273","x":1280,"y":668,"width":549,"height":245,"type":"text","text":"Global Environment:\n* Where user interact with python interpreter\n* Where program start out\n\nInvoking Function $\\rightarrow$ Creating a new Environment (Scope/Frame)\n* The only interaction between Function Environment and Global Environment is by just passing values and returning value"},
		{"id":"43a5e2ed72a2155e","x":1920,"y":646,"width":677,"height":290,"type":"text","text":"Variable Scope:\nFormal parameter (function parameter) get bound to the value of input parameter (function call inputs)\nScope:\nIs a mapping of names to object\n* Define context in which body is evaluated\n* Values of variables given by binding of names\nExpression in body of a function will get evaluated inside this new environment\n* Which means you can have variable with same names in different environments"},
		{"id":"388c9d25ab332120","x":2680,"y":714,"width":427,"height":155,"type":"text","text":"* Inside a function, you can access a variable which defined outside\n* Inside a function, can't modify a variable defined outside\n\t* there is a way whit Global variables"},
		{"id":"b3f5bfce82918cae","x":196,"y":552,"width":509,"height":351,"type":"text","text":"Functions are Object so:\n* It have a type, it is function type\n* You can bind/assign them to variables\n```\ndef is_even(x)\n\treturn x%2 == 0\nx = is_even(10)\n```\n* Can be used inside another function/procedure argument\n* Can be returned as a value of a function/procedure\n* First Class object"},
		{"id":"720e4e35414a47ec","x":291,"y":980,"width":320,"height":60,"type":"text","text":"Everything inside python is an Object"}
	],
	"edges":[
		{"id":"f8bdf570481c1887","fromNode":"79045bce6d1c7b0e","fromSide":"right","toNode":"85c32828a6a8f67d","toSide":"left"},
		{"id":"c1b68a6420675828","fromNode":"85c32828a6a8f67d","fromSide":"right","toNode":"49d9c7390c0175ee","toSide":"left"},
		{"id":"794b36b0fe9e3a06","fromNode":"49d9c7390c0175ee","fromSide":"right","toNode":"b84e81b22d836cce","toSide":"left"},
		{"id":"861406f25446344f","fromNode":"b84e81b22d836cce","fromSide":"right","toNode":"917190673342ddec","toSide":"left"},
		{"id":"a6b270e0355508e5","fromNode":"b84e81b22d836cce","fromSide":"right","toNode":"c1a178593b2d77d8","toSide":"left"},
		{"id":"2be28d11e47030c1","fromNode":"85c32828a6a8f67d","fromSide":"right","toNode":"28939c6decd05d07","toSide":"left"},
		{"id":"ca3907905d55cb7e","fromNode":"28939c6decd05d07","fromSide":"right","toNode":"646bbc2002b55980","toSide":"left"},
		{"id":"e3e7deb76f9f57bb","fromNode":"646bbc2002b55980","fromSide":"right","toNode":"f74a08d5885eb940","toSide":"left"},
		{"id":"ac7720dccd88f0ad","fromNode":"c8ea270b2008c9c8","fromSide":"right","toNode":"cd682fac34627929","toSide":"left"},
		{"id":"ad501ee315baa727","fromNode":"cd682fac34627929","fromSide":"right","toNode":"5791468ede624e62","toSide":"left"},
		{"id":"c51052d0fc9a4f44","fromNode":"5791468ede624e62","fromSide":"right","toNode":"afef9f55d56f81d8","toSide":"left"},
		{"id":"5408baa88e01a1b1","fromNode":"afef9f55d56f81d8","fromSide":"right","toNode":"603ac099a167a0f2","toSide":"left"},
		{"id":"7fba2971826e8287","fromNode":"f74a08d5885eb940","fromSide":"right","toNode":"e77a26b37dbddb44","toSide":"left"},
		{"id":"89dae1b71e12da1e","fromNode":"9ba1c7deb8f6e8da","fromSide":"right","toNode":"7544f323c4d856d3","toSide":"left","label":"Result to"},
		{"id":"80092fec6d771979","fromNode":"7544f323c4d856d3","fromSide":"bottom","toNode":"dc2534cd60d39e96","toSide":"top","label":"Represent"},
		{"id":"1ae0b784ffc05e51","fromNode":"dc2534cd60d39e96","fromSide":"left","toNode":"8059f57f9529f216","toSide":"right","label":"Mean"},
		{"id":"eb1dea323400a481","fromNode":"dc2534cd60d39e96","fromSide":"right","toNode":"7ac578b3c83dc61c","toSide":"left","label":"So"},
		{"id":"9d4b963db5b1e0b6","fromNode":"49d9c7390c0175ee","fromSide":"top","toNode":"ce4ee78b5d83cda0","toSide":"bottom"},
		{"id":"334f659e2b7c5426","fromNode":"e77a26b37dbddb44","fromSide":"bottom","toNode":"9a76c653cd7bbaf8","toSide":"top"},
		{"id":"d62613e6ea16eae2","fromNode":"f74a08d5885eb940","fromSide":"bottom","toNode":"f86f7103c61ab46b","toSide":"top"},
		{"id":"dab756f83792cfdb","fromNode":"f86f7103c61ab46b","fromSide":"right","toNode":"847b3611f8b69273","toSide":"left"},
		{"id":"3701a129bd309b4e","fromNode":"847b3611f8b69273","fromSide":"right","toNode":"43a5e2ed72a2155e","toSide":"left"},
		{"id":"e3f3127f0f8ef1ee","fromNode":"43a5e2ed72a2155e","fromSide":"right","toNode":"388c9d25ab332120","toSide":"left"},
		{"id":"63d12f97cb7b6de2","fromNode":"85c32828a6a8f67d","fromSide":"right","toNode":"b3f5bfce82918cae","toSide":"left"},
		{"id":"06b7fda08d66f488","fromNode":"b3f5bfce82918cae","fromSide":"bottom","toNode":"720e4e35414a47ec","toSide":"top"}
	]
}